package al.tetra.licence.controller;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.security.NoSuchAlgorithmException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import al.tetra.licence.entity.Certificate;
import al.tetra.licence.service.CertificateService;
import al.tetra.licence.service.LicenceService;
import javafx.event.ActionEvent;

import javafx.scene.control.MenuItem;

import javafx.scene.control.Label;

import javafx.scene.control.PasswordField;

import javafx.scene.input.MouseEvent;

import javafx.scene.control.Menu;

import javafx.scene.layout.Pane;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import net.rgielen.fxweaver.core.FxmlView;

@Component
@FxmlView("/fxml/main.fxml")
public class mainController {

	@Autowired
	private LicenceService licenceService;

	@FXML
	private Menu file;
	@FXML
	private MenuItem quit;
	@FXML
	private Label generateLicenceKeyTab;
	@FXML
	private Label validateCertificateTab;
	@FXML
	private Label generateCertificateTab;
	@FXML
	private Label modifikoPerdoruesLabel;
	@FXML
	private Pane container;
	@FXML
	private Pane generateCertificatePane;
	@FXML
	private Pane generateLicencePane;
	@FXML
	private Pane generatePasswordPane;
	@FXML
	private Pane modifikoPerdoruesPane;
	@FXML
	private Button generate;
	@FXML
	private Button validate;
	@FXML
	private Button okid;
	@FXML
	private TextField tf1;
	@FXML
	private TextField tf2;
	@FXML
	private Label l1;
	@FXML
	private Label l2;
	@FXML
	private Label l3;
	@FXML
	private Label typeOfAction;
	@FXML
	private Button copy;
	@FXML
	private Pane validateCertificatePane;
	@FXML
	private Button validate_certificate;
	@FXML
	private TextField cert_alias;
	@FXML
	private PasswordField certKeyPass;

	@FXML
	private Label l21;
	@FXML
	private Label l31;
	@FXML
	private PasswordField cert_pass;
	@FXML
	private Label typeOfAction1;
	@FXML
	private Button cert_upload;
	@FXML
	private Label message;

	// Event Listener on MenuItem[#quit].onAction
	@FXML
	public void quitApp(ActionEvent event) {
		// TODO Autogenerated
		System.exit(0);
	}

	// Event Listener on Label[#generateLicenceKeyTab].onMouseClicked
	@FXML
	public void openGenerateLicenceKeyPane(MouseEvent event) {
		// TODO Autogenerated
		generateCertificatePane.setVisible(false);
		validateCertificatePane.setVisible(false);
		generateLicencePane.setVisible(true);
		generatePasswordPane.setVisible(false);
	}

	// Event Listener on Label[#validateCertificateTab].onMouseClicked
	@FXML
	public void openValidateCertificatePane(MouseEvent event) {
		// TODO Autogenerated
		validateCertificatePane.setVisible(true);
		generateCertificatePane.setVisible(false);
		generateLicencePane.setVisible(false);
		generatePasswordPane.setVisible(false);
		
	}
	
	@FXML
	public void openGenerateCertificatePane(MouseEvent event) {
		// TODO Autogenerated
		validateCertificatePane.setVisible(false);
		generateCertificatePane.setVisible(true);
		generateLicencePane.setVisible(false);
		generatePasswordPane.setVisible(false);
	}
	
	@FXML
	public void openGeneratePasswordPane(MouseEvent event) {
		// TODO Autogenerated
		validateCertificatePane.setVisible(false);
		generateCertificatePane.setVisible(false);
		generateLicencePane.setVisible(false);
		generatePasswordPane.setVisible(true);
	}

	// Event Listener on Button[#generate].onAction
	@FXML
	public void generateLicenceKey(ActionEvent event) {
		// TODO Autogenerated
		typeOfAction.setText("Generate");
		tf1.setText("");
		tf2.setText("");
		tf2.setEditable(false);
		copy.setVisible(false);
	}

	// Event Listener on Button[#validate].onAction
	@FXML
	public void validateLicenceKey(ActionEvent event) {
		// TODO Autogenerated
		typeOfAction.setText("Validate");
		tf1.setText("");
		tf2.setText("");
		tf2.setEditable(true);
		copy.setVisible(false);
	}

	// Event Listener on Button[#okid].onAction
	@FXML
	public void generateOrValidateLicenceKey(ActionEvent event) {
		// TODO Autogenerated
		switch (typeOfAction.getText()) {
		case "Generate":
			try {
				System.out.println("sgjsg" + event);

				String serialNumberEncodedSpecific = licenceService.separateHash(tf1.getText());

				System.out.println("serialNumber encoded: " + serialNumberEncodedSpecific);
				copy.setVisible(true);
				l1.setVisible(true);
				l2.setVisible(false);
				l3.setVisible(false);
				tf2.setText(serialNumberEncodedSpecific);

			} catch (Exception e) {

				e.printStackTrace();
			}
			break;
		case "Validate":
			try {

				// String serialNumber = "PGUKD0BCYB25MZ";

				String serialNumberEncodedSpecific = licenceService.separateHash(tf1.getText());

				System.out.println("serialNumber encoded: " + serialNumberEncodedSpecific);

				String serialNumberCalc = tf2.getText();

				System.out.println(" serialNumberCalc: " + serialNumberCalc);

				l1.setVisible(false);
				if (serialNumberEncodedSpecific.equals(serialNumberCalc)) {
					System.out.println("EQUALS");
					l2.setVisible(true);
					l3.setVisible(false);
				} else {
					l2.setVisible(false);
					l3.setVisible(true);
				}

			} catch (Exception e) {

				e.printStackTrace();
			}
			break;
		}
	}

	// Event Listener on Button[#copy].onAction
	@FXML
	public void copyLicenceKey(ActionEvent event) {
		String myString = tf2.getText();
		//System.err.println("text:: " + myString);

		Toolkit toolkit = Toolkit.getDefaultToolkit();
		Clipboard clipboard = toolkit.getSystemClipboard();
		StringSelection strSel = new StringSelection(myString);
		clipboard.setContents(strSel, null);
	}

}
